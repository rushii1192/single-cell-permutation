import streamlit as st
import pickle
import pandas as pd
from PIL import Image
import os
from rdkit import Chem
from rdkit.Chem import rdMolDescriptors, Draw
drawOptions = Draw.rdMolDraw2D.MolDrawOptions()
drawOptions.prepareMolsBeforeDrawing = False
from rdkit.Chem.Draw import IPythonConsole

df2 = pd.read_parquet('data/de_train.parquet')
df2.tail()

main_df = df2.drop(columns=["sm_lincs_id", "control"])
targets = main_df.columns[2:]

def load_model(modelfile):
    loaded_model = pickle.load(open(modelfile, 'rb'))
    return loaded_model


model = pickle.load(open('models/knn-model.pkl', 'rb'))

st.set_page_config(
    page_title="Gene Analysis",
    page_icon="ðŸ§¬",
    layout="centered",
)
st.title("Single Cell Gene Analysis")

main_image = Image.open(os.getcwd()+"\\main_image.jpg")
st.image(main_image, width=700)

cell_name = st.selectbox(
    "Enter the Cell Name:-",
    ('NK cells', 'T cells CD4+', 'T cells CD8+', 'T regulatory cells','B cells', 'Myeloid cells')
)

sm_name = st.selectbox(
    "Enter SM name:-",
    ('Clotrimazole', 'Mometasone Furoate', 'Idelalisib', 'Vandetanib','Bosutinib', 'Ceritinib', 'Lamivudine', 'Crizotinib','Cabozantinib', 'Flutamide', 'Dasatinib', 'Selumetinib','Trametinib', 'ABT-199 (GDC-0199)', 'Oxybenzone', 'Vorinostat','Raloxifene', 'Linagliptin', 'Lapatinib', 'Canertinib','Disulfiram', 'Vardenafil', 'Palbociclib', 'Ricolinostat','Dabrafenib', 'Proscillaridin A;Proscillaridin-A', 'IN1451','Ixabepilone', 'CEP-18770 (Delanzomib)', 'RG7112', 'MK-5108','Resminostat', 'IMD-0354', 'Alvocidib', 'LY2090314','Methotrexate', 'LDN 193189', 'Tacalcitol', 'Colchicine', 'R428','TL_HRAS26', 'BMS-387032', 'CGP 60474', 'TIE2 Kinase Inhibitor','PD-0325901', 'Isoniazid', 'GSK-1070916', 'Masitinib','Saracatinib', 'CC-401', 'Decitabine', 'Ketoconazole','HYDROXYUREA', 'BAY 61-3606', 'Navitoclax', 'Porcn Inhibitor III','GW843682X', 'Prednisolone', 'Tamatinib', 'Tosedostat','GSK256066', 'MGCD-265', 'AZD-8330', 'RN-486', 'Amiodarone','Belinostat', 'RVX-208', 'GO-6976', 'Scriptaid', 'HMN-214','SB525334', 'AVL-292', 'BMS-777607', 'AZD4547', 'Foretinib','Tivozanib', 'Quizartinib', 'IKK Inhibitor VII', 'UNII-BXU45ZH6LI','Chlorpheniramine', 'Tivantinib', 'CEP-37440', 'TPCA-1', 'AZ628','OSI-930', 'AZD3514', 'Vanoxerine', 'PF-03814735', 'MLN 2238','Dovitinib', 'K-02288', 'Midostaurin', 'I-BET151', 'STK219801','PRT-062607', 'AT 7867', 'Sunitinib', 'Penfluridol', 'BMS-536924','Perhexiline', 'BI-D1870', 'FK 866', 'Mubritinib (TAK 165)','Doxorubicin', 'Pomalidomide', 'Colforsin', 'Phenylbutazone','Protriptyline', 'Buspirone', 'Clomipramine', 'Alogliptin','Nefazodone', 'ABT737', 'Dactolisib', 'Nilotinib', 'Defactinib','PF-04691502', 'GLPG0634', 'Sgc-cbp30', 'BX 912', 'SCH-58261','Ruxolitinib', 'BAY 87-2243', 'O-Demethylated Adapalene','YK 4-279', 'Ganetespib (STA-9090)', 'SLx-2119','Oprozomib (ONX 0912)', 'Desloratadine', 'Pitavastatin Calcium','TR-14035', 'AT13387', 'CHIR-99021', 'RG7090','AMD-070 (hydrochloride)', 'BMS-265246', 'Tipifarnib', 'Imatinib','Topotecan', 'Clemastine','5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-6-yl)pyrimidin-2-amine','CGM-097', 'TGX 221', 'Azacitidine', 'Atorvastatin', 'Riociguat'
    )
)

cell_name_dict = {
    'NK cells':2, 
    'T cells CD4+':3, 
    'T cells CD8+':4, 
    'T regulatory cells':5, 
    'B cells':0, 
    'Myeloid cells':1
}

sm_name_dict = dict(zip(['Clotrimazole', 'Mometasone Furoate', 'Idelalisib', 'Vandetanib','Bosutinib', 'Ceritinib', 'Lamivudine', 'Crizotinib','Cabozantinib', 'Flutamide', 'Dasatinib', 'Selumetinib','Trametinib', 'ABT-199 (GDC-0199)', 'Oxybenzone', 'Vorinostat','Raloxifene', 'Linagliptin', 'Lapatinib', 'Canertinib','Disulfiram', 'Vardenafil', 'Palbociclib', 'Ricolinostat','Dabrafenib', 'Proscillaridin A;Proscillaridin-A', 'IN1451','Ixabepilone', 'CEP-18770 (Delanzomib)', 'RG7112', 'MK-5108','Resminostat', 'IMD-0354', 'Alvocidib', 'LY2090314','Methotrexate', 'LDN 193189', 'Tacalcitol', 'Colchicine', 'R428','TL_HRAS26', 'BMS-387032', 'CGP 60474', 'TIE2 Kinase Inhibitor','PD-0325901', 'Isoniazid', 'GSK-1070916', 'Masitinib','Saracatinib', 'CC-401', 'Decitabine', 'Ketoconazole','HYDROXYUREA', 'BAY 61-3606', 'Navitoclax', 'Porcn Inhibitor III','GW843682X', 'Prednisolone', 'Tamatinib', 'Tosedostat','GSK256066', 'MGCD-265', 'AZD-8330', 'RN-486', 'Amiodarone','Belinostat', 'RVX-208', 'GO-6976', 'Scriptaid', 'HMN-214','SB525334', 'AVL-292', 'BMS-777607', 'AZD4547', 'Foretinib','Tivozanib', 'Quizartinib', 'IKK Inhibitor VII', 'UNII-BXU45ZH6LI','Chlorpheniramine', 'Tivantinib', 'CEP-37440', 'TPCA-1', 'AZ628','OSI-930', 'AZD3514', 'Vanoxerine', 'PF-03814735', 'MLN 2238','Dovitinib', 'K-02288', 'Midostaurin', 'I-BET151', 'STK219801','PRT-062607', 'AT 7867', 'Sunitinib', 'Penfluridol', 'BMS-536924','Perhexiline', 'BI-D1870', 'FK 866', 'Mubritinib (TAK 165)','Doxorubicin', 'Pomalidomide', 'Colforsin', 'Phenylbutazone','Protriptyline', 'Buspirone', 'Clomipramine', 'Alogliptin','Nefazodone', 'ABT737', 'Dactolisib', 'Nilotinib', 'Defactinib','PF-04691502', 'GLPG0634', 'Sgc-cbp30', 'BX 912', 'SCH-58261','Ruxolitinib', 'BAY 87-2243', 'O-Demethylated Adapalene','YK 4-279', 'Ganetespib (STA-9090)', 'SLx-2119','Oprozomib (ONX 0912)', 'Desloratadine', 'Pitavastatin Calcium','TR-14035', 'AT13387', 'CHIR-99021', 'RG7090','AMD-070 (hydrochloride)', 'BMS-265246', 'Tipifarnib', 'Imatinib','Topotecan', 'Clemastine','5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-6-yl)pyrimidin-2-amine','CGM-097', 'TGX 221', 'Azacitidine', 'Atorvastatin', 'Riociguat'],
                   [39,  84,  67, 141,  25,  35,  75,  42,  33,  53,  45, 124, 139, 1,  92, 144, 113,  77,  76,  34,  49, 143,  97, 115,  43, 105, 66,  70,  28, 110,  79, 114,  65,  12,  74,  82,  73, 132,  40,108, 129,  20,  31, 128,  93,  69,  57,  81, 122,  27,  46,  72,62,  16,  86, 103,  59, 104, 133, 138,  58,  78,   8, 111,  13,24, 112,  56, 123,  61, 118,   6,  22,  10,  54, 136, 107,  64,140,  36, 135,  29, 130,   7,  90,   9, 142,  94,  80,  50,  71,83,  63, 121,  96,   4, 126,  98,  21,  99,  18,  52,  85,  51,102,  41, 100, 106,  26,  38,  11,  87,   2,  44,  88,  47,  95,55, 125,  23, 119, 117,  17,  89, 145,  60, 120,  91,  48, 101,131,   5,  32, 109,   3,  19, 134,  68, 137,  37,   0,  30, 127,15,  14, 116]))

molecule_dict = dict(zip(
    [101, 81, 36, 61, 58, 88, 117, 80, 66, 15, 96, 106, 10, 24, 72, 125, 137, 6, 79, 3, 31, 30, 11, 126, 14, 82, 122, 0, 19, 33, 134, 43, 129, 49, 139, 44, 145, 2, 63, 118, 98, 13, 143, 75, 128, 115, 39, 89, 46, 144, 121, 8, 113, 70, 25, 127, 68, 83, 59, 17, 76, 105, 85, 47, 29, 123, 60, 104, 141, 74, 92, 4, 34, 57, 62, 67, 12, 136, 37, 40, 140, 51, 111, 91, 130, 7, 109, 9, 18, 48, 56, 55, 64, 26, 112, 99, 32, 142, 87, 1, 16, 124, 108, 78, 116, 5, 27, 52, 138, 41, 102, 38, 42, 103, 93, 50, 69, 132, 73, 131, 119, 110, 84, 135, 71, 22, 20, 54, 100, 133, 77, 23, 94, 95, 114, 28, 107, 90, 35, 45, 97, 65, 86, 120, 21, 53],
    ['Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1', 'C[C@@H]1C[C@H]2[C@@H]3CCC4=CC(=O)C=C[C@]4(C)[C@@]3(Cl)[C@@H](O)C[C@]2(C)[C@@]1(OC(=O)c1ccco1)C(=O)CCl', 'CC[C@H](Nc1ncnc2[nH]cnc12)c1nc2cccc(F)c2c(=O)n1-c1ccccc1', 'COc1cc2c(Nc3ccc(Br)cc3F)ncnc2cc1OCC1CCN(C)CC1', 'COc1cc(Nc2c(C#N)cnc3cc(OCCCN4CCN(C)CC4)c(OC)cc23)c(Cl)cc1Cl', 'Cc1cc(Nc2ncc(Cl)c(Nc3ccccc3S(=O)(=O)C(C)C)n2)c(OC(C)C)cc1C1CCNCC1', 'Nc1ccn([C@@H]2CS[C@H](CO)O2)c(=O)n1', 'C[C@@H](Oc1cc(-c2cnn(C3CCNCC3)c2)cnc1N)c1c(Cl)ccc(F)c1Cl', 'COc1cc2nccc(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3)c2cc1OC', 'CC(C)C(=O)Nc1ccc([N+](=O)[O-])c(C(F)(F)F)c1', 'Cc1nc(Nc2ncc(C(=O)Nc3c(C)cccc3Cl)s2)cc(N2CCN(CCO)CC2)n1', 'Cn1cnc2c(F)c(Nc3ccc(Br)cc3Cl)c(C(=O)NOCCO)cc21', 'CC(=O)Nc1cccc(-n2c(=O)n(C3CC3)c(=O)c3c(Nc4ccc(I)cc4F)n(C)c(=O)c(C)c32)c1', 'CC1(C)CCC(CN2CCN(c3ccc(C(=O)NS(=O)(=O)c4ccc(NCC5CCOCC5)c([N+](=O)[O-])c4)c(Oc4cnc5[nH]ccc5c4)c3)CC2)=C(c2ccc(Cl)cc2)C1', 'COc1ccc(C(=O)c2ccccc2)c(O)c1', 'O=C(CCCCCCC(=O)Nc1ccccc1)NO', 'O=C(c1ccc(OCCN2CCCCC2)cc1)c1c(-c2ccc(O)cc2)sc2cc(O)ccc12', 'CC#CCn1c(N2CCC[C@@H](N)C2)nc2c1c(=O)n(Cc1nc(C)c3ccccc3n1)c(=O)n2C', 'CS(=O)(=O)CCNCc1ccc(-c2ccc3ncnc(Nc4ccc(OCc5cccc(F)c5)c(Cl)c4)c3c2)o1', 'C=CC(=O)Nc1cc2c(Nc3ccc(F)c(Cl)c3)ncnc2cc1OCCCN1CCOCC1', 'CCN(CC)C(=S)SSC(=S)N(CC)CC', 'CCCc1nc(C)c2c(=O)[nH]c(-c3cc(S(=O)(=O)N4CCN(CC)CC4)ccc3OCC)nn12', 'CC(=O)c1c(C)c2cnc(Nc3ccc(N4CCNCC4)cn3)nc2n(C2CCCC2)c1=O', 'O=C(CCCCCCNC(=O)c1cnc(N(c2ccccc2)c2ccccc2)nc1)NO', 'CC(C)(C)c1nc(-c2cccc(NS(=O)(=O)c3c(F)cccc3F)c2F)c(-c2ccnc(N)n2)s1', 'C[C@@H]1O[C@@H](O[C@@H]2C=C3CC[C@@H]4[C@H](CC[C@]5(C)[C@@H](c6ccc(=O)oc6)CC[C@]45O)[C@@]3(C)CC2)[C@H](O)[C@H](O)[C@H]1O', 'Nc1ncnc2c1c(I)cn2[C@@H]1O[C@H](CO)[C@@H](O)[C@H]1O', 'C/C(=C\\c1csc(C)n1)[C@@H]1C[C@@H]2O[C@]2(C)CCC[C@H](C)[C@H](O)[C@@H](C)C(=O)C(C)(C)[C@@H](O)CC(=O)N1', 'CC(C)C[C@H](NC(=O)[C@@H](NC(=O)c1cccc(-c2ccccc2)n1)[C@@H](C)O)B(O)O', 'CCOc1cc(C(C)(C)C)ccc1C1=N[C@@](C)(c2ccc(Cl)cc2)[C@@](C)(c2ccc(Cl)cc2)N1C(=O)N1CCN(CCCS(C)(=O)=O)CC1', 'O=C(O)[C@]1(Cc2cccc(Nc3nccs3)n2)CC[C@@H](Oc2cccc(Cl)c2F)CC1', 'CN(C)Cc1ccc(S(=O)(=O)n2ccc(/C=C/C(=O)NO)c2)cc1', 'O=C(Nc1cc(C(F)(F)F)cc(C(F)(F)F)c1)c1cc(Cl)ccc1O', 'CN1CC[C@H](c2c(O)cc(O)c3c(=O)cc(-c4ccccc4Cl)oc23)[C@H](O)C1', 'O=C1NC(=O)C(c2cnc3ccccn23)=C1c1cn2c3c(cc(F)cc13)CN(C(=O)N1CCCCC1)CC2', 'CN(Cc1cnc2nc(N)nc(N)c2n1)c1ccc(C(=O)N[C@@H](CCC(=O)O)C(=O)O)cc1', 'c1ccc2c(-c3cnn4cc(-c5ccc(N6CCNCC6)cc5)cnc34)ccnc2c1', 'C=C1/C(=C\\C=C2/CCC[C@]3(C)[C@@H]([C@H](C)CC[C@@H](O)C(C)C)CC[C@@H]23)C[C@@H](O)C[C@@H]1O', 'COc1cc2c(c(OC)c1OC)-c1ccc(OC)c(=O)cc1[C@@H](NC(C)=O)CC2', 'Nc1nc(Nc2ccc3c(c2)CC[C@@H](N2CCCC2)CC3)nn1-c1cc2c(nn1)-c1ccccc1CCC2', 'Cc1onc(C(=O)N2CCN(C(c3ccc(Cl)cc3)c3ccc(Cl)cc3)CC2)c1[N+](=O)[O-]', 'CC(C)(C)c1cnc(CSc2cnc(NC(=O)C3CCNCC3)s2)o1', 'OCCCNc1cc(-c2ccnc(Nc3cccc(Cl)c3)n2)ccn1', 'COc1ccc2cc(-c3[nH]c(-c4ccc([S+](C)[O-])cc4)nc3-c3ccncc3)ccc2c1', 'O=C(NOC[C@H](O)CO)c1ccc(F)c(F)c1Nc1ccc(I)cc1F', 'NNC(=O)c1ccncc1', 'CCn1cc(-c2ccnc3[nH]c(-c4cccc(CN(C)C)c4)cc23)c(-c2ccc(NC(=O)N(C)C)cc2)n1', 'Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Nc1nc(-c2cccnc2)cs1', 'CN1CCN(CCOc2cc(OC3CCOCC3)c3c(Nc4c(Cl)ccc5c4OCO5)ncnc3c2)CC1', 'c1cc(OCCN2CCCCC2)cc(-c2[nH]nc3ccc(-c4nc[nH]n4)cc23)c1', 'Nc1ncn([C@H]2C[C@H](O)[C@@H](CO)O2)c(=O)n1', 'CC(=O)N1CCN(c2ccc(OC[C@H]3CO[C@](Cn4ccnc4)(c4ccc(Cl)cc4Cl)O3)cc2)CC1', 'NC(O)=NO', 'COc1ccc(-c2cc3nccn3c(Nc3ncccc3C(N)=O)n2)cc1OC', 'CC1(C)CCC(c2ccc(Cl)cc2)=C(CN2CCN(c3ccc(C(=O)NS(=O)(=O)c4ccc(N[C@H](CCN5CCOCC5)CSc5ccccc5)c(S(=O)(=O)C(F)(F)F)c4)cc3)CC2)C1', 'O=C(CSc1nc2c(c(=O)n1-c1ccccc1)SCC2)Nc1ccc(-c2ccccc2)cn1', 'COc1cc2ncn(-c3cc(OCc4ccccc4C(F)(F)F)c(C(N)=O)s3)c2cc1OC', 'C[C@]12C=CC(=O)C=C1CC[C@@H]1[C@@H]2[C@@H](O)C[C@@]2(C)[C@H]1CC[C@]2(O)C(=O)CO', 'COc1cc(Nc2ncc(F)c(Nc3ccc4c(n3)NC(=O)C(C)(C)O4)n2)cc(OC)c1OC', 'CC(C)C[C@@H](C(=O)N[C@H](C(=O)OC1CCCC1)c1ccccc1)[C@H](O)C(=O)NO', 'COc1cccc(Nc2c(C(N)=O)cnc3c(C)cc(S(=O)(=O)c4cccc(C(=O)N(C)C)c4)cc23)c1', 'Cn1cnc(-c2cc3nccc(Oc4ccc(NC(=S)NC(=O)Cc5ccccc5)cc4F)c3s2)c1', 'Cc1cc(C(=O)NOCCO)c(Nc2ccc(I)cc2F)n(C)c1=O', 'CN1CCN(c2ccc(Nc3cc(-c4cccc(-n5ccc6cc(C7CC7)cc(F)c6c5=O)c4CO)cn(C)c3=O)nc2)CC1', 'CCCCc1oc2ccccc2c1C(=O)c1cc(I)c(OCCN(CC)CC)c(I)c1', 'O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO', 'COc1cc(OC)c2c(=O)[nH]c(-c3cc(C)c(OCCO)c(C)c3)nc2c1', 'Cn1c2ccccc2c2c3c(c4c5ccccc5n(CCC#N)c4c21)CNC3=O', 'O=C1c2cccc3cccc(c23)C(=O)N1CCCCCC(O)=NO', 'COc1ccc(S(=O)(=O)N(C(C)=O)c2ccccc2/C=C/c2cc[n+]([O-])cc2)cc1', 'Cc1cccc(-c2[nH]c(C(C)(C)C)nc2-c2ccc3nccnc3c2)n1', 'C=CC(=O)Nc1cccc(Nc2nc(Nc3ccc(OCCOC)cc3)ncc2F)c1', 'CCOc1ccn(-c2ccc(F)cc2)c(=O)c1C(=O)Nc1ccc(Oc2ccnc(N)c2Cl)c(F)c1', 'COc1cc(CCc2cc(NC(=O)c3ccc(N4C[C@@H](C)N[C@@H](C)C4)cc3)[nH]n2)cc(OC)c1', 'COc1cc2c(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3F)ccnc2cc1OCCCN1CCOCC1', 'COc1cc2nccc(Oc3ccc(NC(=O)Nc4cc(C)on4)c(Cl)c3)c2cc1OC', 'CC(C)(C)c1cc(NC(=O)Nc2ccc(-c3cn4c(n3)sc3cc(OCCN5CCOCC5)ccc34)cc2)no1', 'O=C(c1ccc(Nc2nccc(-c3cc4ccccc4s3)n2)cc1)N1CCC(N2CCCC2)CC1', 'CCc1ccc(OCc2ccccc2C(=O)Nc2ccc3nc(C)cc(N)c3c2)cc1', 'CN(C)CCC(c1ccc(Cl)cc1)c1ccccn1', 'O=C1NC(=O)[C@@H](c2cn3c4c(cccc24)CCC3)[C@@H]1c1c[nH]c2ccccc12', 'CNC(=O)c1ccccc1Nc1nc(Nc2ccc3c(c2OC)CCC[C@H](N2CCN(CCO)CC2)C3)ncc1Cl', 'NC(=O)Nc1sc(-c2ccc(F)cc2)cc1C(N)=O', 'Cc1ccc(NC(=O)c2cccc(C(C)(C)C#N)c2)cc1Nc1ccc2ncn(C)c(=O)c2c1', 'O=C(Nc1ccc(OC(F)(F)F)cc1)c1sccc1NCc1ccnc2ccccc12', 'CC(=O)N1CCN(CCOc2ccc(C3CCN(C4=Nn5c(nnc5C(F)(F)F)CC4)CC3)cc2)CC1', 'Fc1ccc(C(OCCN2CCN(CCCc3ccccc3)CC2)c2ccc(F)cc2)cc1', 'CC(=O)NCC(=O)N1[C@@H]2CC[C@H]1c1ccc(Nc3ncc(C(F)(F)F)c(NC4CCC4)n3)cc12', 'CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O', 'CN1CCN(c2ccc3[nH]c(-c4c(N)c5c(F)cccc5[nH]c4=O)nc3c2)CC1', 'COc1cc(-c2cc(-c3cccc(O)c3)cnc2N)cc(OC)c1OC', 'CO[C@@H]1[C@H](N(C)C(=O)c2ccccc2)C[C@H]2O[C@]1(C)n1c3ccccc3c3c4c(c5c6ccccc6n2c5c31)C(=O)NC4', 'COc1cc2c(cc1-c1c(C)noc1C)ncc1[nH]c(=O)n([C@H](C)c3ccccn3)c12', 'CC1=NN(c2ccc(C(=O)O)cc2)C(=O)/C1=C/c1ccc(-c2cc(C)c(C)cc2[N+](=O)[O-])o1', 'NC(=O)c1cnc(N[C@@H]2CCCC[C@@H]2N)nc1Nc1cccc(-n2nccn2)c1', 'Clc1ccc(C2(c3ccc(-c4cn[nH]c4)cc3)CCNCC2)cc1', 'CCN(CC)CCNC(=O)c1c(C)[nH]c(/C=C2\\C(=O)Nc3ccc(F)cc32)c1C', 'OC1(c2ccc(Cl)c(C(F)(F)F)c2)CCN(CCCC(c2ccc(F)cc2)c2ccc(F)cc2)CC1', 'Cc1cc(N2CCOCC2)cc2[nH]c(-c3c(NC[C@@H](O)c4cccc(Cl)c4)cc[nH]c3=O)nc12', 'C1CCC(C(CC2CCCCN2)C2CCCCC2)CC1', 'CC(C)CCN1c2nc(Nc3cc(F)c(O)c(F)c3)ncc2N(C)C(=O)C1C', 'O=C(/C=C/c1cccnc1)NCCCCC1CCN(C(=O)c2ccccc2)CC1', 'FC(F)(F)c1ccc(/C=C/c2nc(COc3ccc(CCCCn4ccnn4)cc3)co2)cc1', 'COc1cccc2c1C(=O)c1c(O)c3c(c(O)c1C2=O)C[C@@](O)(C(=O)CO)C[C@@H]3O[C@H]1C[C@H](N)[C@H](O)[C@H](C)O1', 'Nc1cccc2c1C(=O)N(C1CCC(=O)NC1=O)C2=O', 'C=C[C@@]1(C)CC(=O)[C@]2(O)[C@@]3(C)[C@@H](O)CCC(C)(C)[C@@H]3[C@H](O)[C@H](OC(C)=O)[C@@]2(C)O1', 'CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O', 'CNCCCC1c2ccccc2C=Cc2ccccc21', 'O=C1CC2(CCCC2)CC(=O)N1CCCCN1CCN(c2ncccn2)CC1', 'CN(C)CCCN1c2ccccc2CCc2ccc(Cl)cc21', 'Cn1c(=O)cc(N2CCC[C@@H](N)C2)n(Cc2ccccc2C#N)c1=O', 'CCc1nn(CCCN2CCN(c3cccc(Cl)c3)CC2)c(=O)n1CCOc1ccccc1', 'CN(C)CC[C@H](CSc1ccccc1)Nc1ccc(S(=O)(=O)NC(=O)c2ccc(N3CCN(Cc4ccccc4-c4ccc(Cl)cc4)CC3)cc2)cc1[N+](=O)[O-]', 'Cn1c(=O)n(-c2ccc(C(C)(C)C#N)cc2)c2c3cc(-c4cnc5ccccc5c4)ccc3ncc21', 'Cc1cn(-c2cc(NC(=O)c3ccc(C)c(Nc4nccc(-c5cccnc5)n4)c3)cc(C(F)(F)F)c2)cn1', 'CNC(=O)c1ccc(Nc2ncc(C(F)(F)F)c(NCc3nccnc3N(C)S(C)(=O)=O)n2)cc1', 'COc1ccc(-c2cc3c(C)nc(N)nc3n([C@H]3CC[C@H](OCCO)CC3)c2=O)cn1', 'O=C(Nc1nc2cccc(-c3ccc(CN4CCS(=O)(=O)CC4)cc3)n2n1)C1CC1', 'COc1ccc(CCc2nc3cc(-c4c(C)noc4C)ccc3n2C[C@H](C)N2CCOCC2)cc1Cl', 'O=C(Nc1cccc(Nc2ncc(Br)c(NCCc3c[nH]cn3)n2)c1)N1CCCC1', 'Nc1nc2c(cnn2CCc2ccccc2)c2nc(-c3ccco3)nn12', 'N#CC[C@H](C1CCCC1)n1cc(-c2ncnc3[nH]ccc23)cn1', 'Cc1cc(-c2nc(-c3ccc(OC(F)(F)F)cc3)no2)nn1Cc1ccnc(N2CCN(C3CC3)CC2)c1', 'O=C(O)c1ccc2cc(-c3ccc(O)c(C45CC6CC(CC(C6)C4)C5)c3)ccc2c1', 'COc1ccc(C(=O)CC2(O)C(=O)Nc3c(Cl)ccc(Cl)c32)cc1', 'CC(C)c1cc(-c2n[nH]c(=O)n2-c2ccc3c(ccn3C)c2)c(O)cc1O', 'CC(C)NC(=O)COc1cccc(-c2nc(Nc3ccc4[nH]ncc4c3)c3ccccc3n2)c1', 'COC[C@H](NC(=O)c1cnc(C)s1)C(=O)N[C@@H](COC)C(=O)N[C@@H](Cc1ccccc1)C(=O)[C@@]1(C)CO1', 'Clc1ccc2c(c1)CCc1cccnc1C2=C1CCNCC1', 'O=C(O)C[C@H](O)C[C@H](O)/C=C/c1c(C2CC2)nc2ccccc2c1-c1ccc(F)cc1', 'COc1cccc(OC)c1-c1ccc(C[C@H](NC(=O)c2c(Cl)cccc2Cl)C(=O)O)cc1', 'CC(C)c1cc(C(=O)N2Cc3ccc(CN4CCN(C)CC4)cc3C2)c(O)cc1O', 'Cc1cnc(-c2cnc(NCCNc3ccc(C#N)cn3)nc2-c2ccc(Cl)cc2Cl)[nH]1', 'Cc1nc(C#Cc2ccnc(Cl)c2)c(C)n1-c1ccc(F)cc1', 'NCCCCN(Cc1nc2ccccc2[nH]1)[C@H]1CCCc2cccnc21', 'CCCCOc1c(C(=O)c2c(F)cc(C)cc2F)cnc2[nH]ncc12', 'Cn1cncc1[C@@](N)(c1ccc(Cl)cc1)c1ccc2c(c1)c(-c1cccc(Cl)c1)cc(=O)n2C', 'Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Nc1nccc(-c2cccnc2)n1', 'CC[C@@]1(O)C(=O)OCc2c1cc1n(c2=O)Cc2cc3c(CN(C)C)c(O)ccc3nc2-1', 'CN1CCC[C@@H]1CCO[C@](C)(c1ccccc1)c1ccc(Cl)cc1', 'Cc1nc2c(-c3cnc(N)nc3)nc(N3CCOCC3)nc2n1C(C)C', 'COc1cc2c(cc1OC(C)C)[C@H](c1ccc(Cl)cc1)N(c1ccc(N(C)C[C@H]3CC[C@H](N4CCN(C)C(=O)C4)CC3)cc1)C(=O)C2', 'Cc1cc(C(C)Nc2ccccc2)c2nc(N3CCOCC3)cc(=O)n2c1', 'Nc1ncn([C@@H]2O[C@H](CO)[C@@H](O)[C@H]2O)c(=O)n1', 'CC(C)c1c(C(=O)Nc2ccccc2)c(-c2ccccc2)c(-c2ccc(F)cc2)n1CC[C@@H](O)C[C@@H](O)CC(=O)O', 'COC(=O)N(C)c1c(N)nc(-c2nn(Cc3ccccc3F)c3ncccc23)nc1N']
))

if (st.button("Show Results")):
    inputs = pd.DataFrame([[cell_name_dict[cell_name], sm_name_dict[sm_name]]], columns=['cell_type','sm_name'])
    pred = model.predict(inputs)
    pred_df = pd.DataFrame(pred, columns=targets)
    mol = Chem.MolFromSmiles(molecule_dict[int(pred[0][0])])
    bi = {}
    fp = rdMolDescriptors.GetMorganFingerprintAsBitVect(mol, radius=2, bitInfo=bi)

    tpls = [(mol, x, bi) for x in fp.GetOnBits()]

    p = Draw.DrawMorganBits(tpls, molsPerRow=5, legends=[str(x) for x in fp.GetOnBits()], drawOptions=drawOptions)
    
    st.image(p)
    st.dataframe(pred_df.iloc[0][1:], use_container_width=True)